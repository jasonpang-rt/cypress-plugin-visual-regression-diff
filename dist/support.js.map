{"version":3,"file":"support.js","sources":["../src/constants.ts","../src/commands.ts","../src/support.ts"],"sourcesContent":["const PLUGIN_NAME = \"cp-visual-regression-diff\";\nexport const LINK_PREFIX = `#${PLUGIN_NAME}-`;\nexport const OVERLAY_CLASS = `${PLUGIN_NAME}-overlay`;\nexport const IMAGE_SNAPSHOT_PREFIX = `__${PLUGIN_NAME}_snapshots__`;\n\nexport enum FILE_SUFFIX {\n  diff = \".diff\",\n  actual = \".actual\",\n}\n\nexport const TASK = {\n  getScreenshotPathInfo: `${PLUGIN_NAME}-getScreenshotPathInfo`,\n  compareImages: `${PLUGIN_NAME}-compareImages`,\n  approveImage: `${PLUGIN_NAME}-approveImage`,\n  cleanupImages: `${PLUGIN_NAME}-cleanupImages`,\n  doesFileExist: `${PLUGIN_NAME}-doesFileExist`,\n  /* c8 ignore next */\n};\n\nexport const PATH_VARIABLES = {\n  specPath: \"{spec_path}\",\n  unixSystemRootPath: \"{unix_system_root_path}\",\n  winSystemRootPath: \"{win_system_root_path}\",\n} as const;\n\nexport const WINDOWS_LIKE_DRIVE_REGEX = /^[A-Z]:$/;\n\nexport const METADATA_KEY = \"FRSOURCE_CPVRD_V\";\n","import { FILE_SUFFIX, LINK_PREFIX, TASK } from \"./constants\";\nimport type pixelmatch from \"pixelmatch\";\nimport * as Base64 from \"@frsource/base64\";\nimport type { CompareImagesTaskReturn } from \"./types\";\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Cypress {\n    type MatchImageOptions = {\n      screenshotConfig?: Partial<Cypress.ScreenshotDefaultsOptions>;\n      diffConfig?: Parameters<typeof pixelmatch>[5];\n      updateImages?: boolean;\n      /**\n       * @deprecated since version 3.0, use imagesPath instead\n       */\n      imagesDir?: string;\n      imagesPath?: string;\n      maxDiffThreshold?: number;\n      title?: string;\n      matchAgainstPath?: string;\n      // IDEA: to be implemented if support for files NOT from filesystem needed\n      // matchAgainst?: string | Buffer;\n    };\n\n    type MatchImageReturn = {\n      diffValue: number | undefined;\n      imgNewPath: string;\n      imgPath: string;\n      imgDiffPath: string;\n      imgNewBase64: string | undefined;\n      imgBase64: string | undefined;\n      imgDiffBase64: string | undefined;\n      imgNew: InstanceType<Cypress[\"Buffer\"]> | undefined;\n      img: InstanceType<Cypress[\"Buffer\"]> | undefined;\n      imgDiff: InstanceType<Cypress[\"Buffer\"]> | undefined;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface Chainable<Subject> {\n      /**\n       * Command to create and compare image snapshots.\n       * @memberof Cypress.Chainable\n       * @example cy.get('.my-element').matchImage();\n       */\n      matchImage(\n        options?: Cypress.MatchImageOptions\n      ): Chainable<MatchImageReturn>;\n    }\n  }\n}\n\nconst constructCypressError = (log: Cypress.Log, err: Error) => {\n  // only way to throw & log the message properly in Cypress\n  // https://github.com/cypress-io/cypress/blob/5f94cad3cb4126e0567290b957050c33e3a78e3c/packages/driver/src/cypress/error_utils.ts#L214-L216\n  (err as unknown as { onFail: (e: Error) => void }).onFail = (err: Error) =>\n    log.error(err);\n  return err;\n};\n\nconst getImagesDir = (options: Cypress.MatchImageOptions) => {\n  const imagesDir =\n    options.imagesDir ||\n    (Cypress.env(\"pluginVisualRegressionImagesDir\") as string | undefined);\n\n  // TODO: remove in 4.0.0\n  if (imagesDir) {\n    console.warn(\n      \"@frsource/cypress-plugin-visual-regression-diff] `imagesDir` option is deprecated, use `imagesPath` instead (https://github.com/FRSOURCE/cypress-plugin-visual-regression-diff#configuration)\"\n    );\n  }\n\n  return imagesDir;\n};\n\nexport const getConfig = (options: Cypress.MatchImageOptions) => {\n  const imagesDir = getImagesDir(options);\n\n  return {\n    scaleFactor:\n      Cypress.env(\"pluginVisualRegressionForceDeviceScaleFactor\") === false\n        ? 1\n        : 1 / window.devicePixelRatio,\n    updateImages:\n      options.updateImages ||\n      (Cypress.env(\"pluginVisualRegressionUpdateImages\") as\n        | boolean\n        | undefined) ||\n      false,\n    imagesPath:\n      (imagesDir && `{spec_path}/${imagesDir}`) ||\n      options.imagesPath ||\n      (Cypress.env(\"pluginVisualRegressionImagesPath\") as string | undefined) ||\n      \"{spec_path}/__image_snapshots__\",\n    maxDiffThreshold:\n      options.maxDiffThreshold ||\n      (Cypress.env(\"pluginVisualRegressionMaxDiffThreshold\") as\n        | number\n        | undefined) ||\n      0.01,\n    diffConfig:\n      options.diffConfig ||\n      (Cypress.env(\"pluginVisualRegressionDiffConfig\") as\n        | Parameters<typeof pixelmatch>[5]\n        | undefined) ||\n      {},\n    screenshotConfig:\n      options.screenshotConfig ||\n      (Cypress.env(\"pluginVisualRegressionScreenshotConfig\") as\n        | Partial<Cypress.ScreenshotDefaultsOptions>\n        | undefined) ||\n      {},\n    matchAgainstPath: options.matchAgainstPath || undefined,\n  };\n};\n\nCypress.Commands.add(\n  \"matchImage\",\n  { prevSubject: \"optional\" },\n  (subject, options = {}) => {\n    const $el = subject as JQuery<HTMLElement> | undefined;\n    let title: string;\n\n    const {\n      scaleFactor,\n      updateImages,\n      imagesPath,\n      maxDiffThreshold,\n      diffConfig,\n      screenshotConfig,\n      matchAgainstPath,\n    } = getConfig(options);\n\n    const currentRetryNumber = (\n      cy as unknown as { state: (s: string) => { currentRetry: () => number } }\n    )\n      .state(\"test\")\n      .currentRetry();\n\n    return cy\n      .then(() =>\n        cy.task<{ screenshotPath: string; title: string }>(\n          TASK.getScreenshotPathInfo,\n          {\n            titleFromOptions:\n              options.title || Cypress.currentTest.titlePath.join(\" \"),\n            imagesPath,\n            specPath: Cypress.spec.relative,\n            currentRetryNumber,\n          },\n          { log: false }\n        )\n      )\n      .then(({ screenshotPath, title: titleFromTask }) => {\n        title = titleFromTask;\n        let imgPath: string;\n        return ($el ? cy.wrap($el) : cy)\n          .screenshot(screenshotPath, {\n            ...screenshotConfig,\n            onAfterScreenshot(el, props) {\n              imgPath = props.path;\n              screenshotConfig.onAfterScreenshot?.(el, props);\n            },\n            log: false,\n          })\n          .then(() => imgPath);\n      })\n      .then((imgPath) =>\n        cy\n          .task<CompareImagesTaskReturn>(\n            TASK.compareImages,\n            {\n              scaleFactor,\n              imgNew: imgPath,\n              imgOld:\n                matchAgainstPath || imgPath.replace(FILE_SUFFIX.actual, \"\"),\n              updateImages,\n              maxDiffThreshold,\n              diffConfig,\n            },\n            { log: false }\n          )\n          .then((res) => ({\n            res,\n            imgPath,\n          }))\n      )\n      .then(({ res, imgPath }) => {\n        const log = Cypress.log({\n          name: \"log\",\n          displayName: \"Match image\",\n          $el,\n        });\n\n        if (!res) {\n          log.set(\"message\", \"Unexpected error!\");\n          throw constructCypressError(log, new Error(\"Unexpected error!\"));\n        }\n\n        log.set(\n          \"message\",\n          `${res.message}${\n            res.imgDiffBase64 && res.imgNewBase64 && res.imgOldBase64\n              ? `\\n[See comparison](${LINK_PREFIX}${Base64.encode(\n                  encodeURIComponent(\n                    JSON.stringify({\n                      title,\n                      imgPath,\n                      imgDiffBase64: res.imgDiffBase64,\n                      imgNewBase64: res.imgNewBase64,\n                      imgOldBase64: res.imgOldBase64,\n                      error: res.error,\n                    })\n                  )\n                )})`\n              : \"\"\n          }`\n        );\n\n        if (res.error) {\n          log.set(\"consoleProps\", () => res);\n          throw constructCypressError(log, new Error(res.message));\n        }\n\n        return {\n          diffValue: res.imgDiff,\n          imgNewPath: imgPath,\n          imgPath: imgPath.replace(FILE_SUFFIX.actual, \"\"),\n          imgDiffPath: imgPath.replace(FILE_SUFFIX.actual, FILE_SUFFIX.diff),\n          imgNewBase64: res.imgNewBase64,\n          imgBase64: res.imgOldBase64,\n          imgDiffBase64: res.imgDiffBase64,\n          imgNew:\n            typeof res.imgNewBase64 === \"string\"\n              ? Cypress.Buffer.from(res.imgNewBase64, \"base64\")\n              : undefined,\n          img:\n            typeof res.imgOldBase64 === \"string\"\n              ? Cypress.Buffer.from(res.imgOldBase64, \"base64\")\n              : undefined,\n          imgDiff:\n            typeof res.imgDiffBase64 === \"string\"\n              ? Cypress.Buffer.from(res.imgDiffBase64, \"base64\")\n              : undefined,\n        };\n      });\n  }\n);\n","import * as Base64 from \"@frsource/base64\";\nimport \"./commands\";\nimport { LINK_PREFIX, OVERLAY_CLASS, TASK } from \"./constants\";\n\n/* c8 ignore start */\nfunction queueClear() {\n  (cy as unknown as { queue: { clear: () => void } }).queue.clear();\n  (cy as unknown as { state: (k: string, value: unknown) => void }).state(\n    \"index\",\n    0\n  );\n}\n\nfunction queueRun() {\n  // needed to run a task outside of the test processing flow\n  (cy as unknown as { queue: { run: () => void } }).queue.run();\n}\n/* c8 ignore stop */\nexport const generateOverlayTemplate = ({\n  title,\n  imgNewBase64,\n  imgOldBase64,\n  imgDiffBase64,\n  wasImageNotUpdatedYet,\n  error,\n}: {\n  title: string;\n  imgNewBase64: string;\n  imgOldBase64: string;\n  imgDiffBase64: string;\n  wasImageNotUpdatedYet: boolean;\n  error: boolean;\n}) => `<div class=\"${OVERLAY_CLASS} runner\" style=\"position:fixed;z-index:10;top:0;bottom:0;left:0;right:0;display:flex;flex-flow:column\">\n  <header style=\"position:static\">\n  <nav style=\"display:flex;width:100%;align-items:center;justify-content:space-between;padding:10px 15px;\">\n    <h2>${title} - screenshot diff</h2>\n    <form style=\"display:flex;align-items:center;gap:5px;text-align:right\">\n      ${\n        wasImageNotUpdatedYet\n          ? `<button type=\"submit\"><i class=\"fa fa-check\"></i> Update screenshot</button>`\n          : error\n          ? \"Image was already updated, rerun test to see new comparison\"\n          : \"\"\n      }\n      <button type=\"button\" data-type=\"close\"><i class=\"fa fa-times\"></i> Close</button>\n    <form>\n  </nav>\n  </header>\n  <div style=\"padding:15px;overflow:auto\">\n    <div style=\"display:flex;justify-content:space-evenly;align-items:flex-start;gap:15px\">\n      <div\n        style=\"position:relative;background:#fff;border:solid 15px #fff\"\n        onmouseover=\"this.querySelector('div').style.opacity=0,this.querySelector('img').style.opacity=1\"\n        onmouseleave=\"this.querySelector('div').style.opacity=1,this.querySelector('img').style.opacity=0\"\n      >\n        <h3>New screenshot (hover mouse away too see the old one):</h3>\n        <img style=\"min-width:300px;width:100%;opacity:0\" src=\"data:image/png;base64,${imgNewBase64}\" />\n        <div style=\"position:absolute;top:0;left:0;background:#fff\">\n          <h3>Old screenshot (hover over to see the new one):</h3>\n          <img style=\"min-width:300px;width:100%\" src=\"data:image/png;base64,${imgOldBase64}\" />\n        </div>\n      </div>\n      <div style=\"background:#fff;border:solid 15px #fff\">\n        <h3>Diff between new and old screenshot</h3>\n        <img style=\"min-width:300px;width:100%\" src=\"data:image/png;base64,${imgDiffBase64}\" />\n      </div>\n    </div>\n  </div>\n</div>`;\n\n/* c8 ignore start */\nbefore(() => {\n  if (!top) return null;\n  Cypress.$(`.${OVERLAY_CLASS}`, top.document.body).remove();\n});\n\nafter(() => {\n  if (!top) return null;\n\n  Cypress.$(top.document.body).on(\n    \"click\",\n    `a[href^=\"${LINK_PREFIX}\"]`,\n    function (e) {\n      e.preventDefault();\n      if (!top) return false;\n\n      const {\n        title,\n        imgPath,\n        imgDiffBase64,\n        imgNewBase64,\n        imgOldBase64,\n        error,\n      } = JSON.parse(\n        decodeURIComponent(\n          Base64.decode(\n            e.currentTarget.getAttribute(\"href\").substring(LINK_PREFIX.length)\n          )\n        )\n      );\n      queueClear();\n\n      cy.task(TASK.cleanupImages, { log: false }).then(() => {\n        cy.task<boolean>(\n          TASK.doesFileExist,\n          { path: imgPath },\n          { log: false }\n        ).then((wasImageNotUpdatedYet) => {\n          if (!top) return false;\n          queueClear();\n\n          Cypress.$(\n            generateOverlayTemplate({\n              title,\n              imgNewBase64,\n              imgOldBase64,\n              imgDiffBase64,\n              error,\n              wasImageNotUpdatedYet,\n            })\n          ).appendTo(top.document.body);\n\n          const wrapper = Cypress.$(`.${OVERLAY_CLASS}`, top.document.body);\n          wrapper.on(\"click\", 'button[data-type=\"close\"]', function () {\n            wrapper.remove();\n          });\n\n          wrapper.on(\"submit\", \"form\", function (e) {\n            e.preventDefault();\n\n            cy.task(TASK.approveImage, { img: imgPath }).then(() =>\n              wrapper.remove()\n            );\n\n            queueRun();\n          });\n        });\n\n        queueRun();\n\n        return false;\n      });\n    }\n  );\n});\n/* c8 ignore stop */\n"],"names":["PLUGIN_NAME","LINK_PREFIX","OVERLAY_CLASS","FILE_SUFFIX","TASK","getScreenshotPathInfo","compareImages","approveImage","cleanupImages","doesFileExist","constructCypressError","log","err","onFail","error","getImagesDir","options","imagesDir","Cypress","env","console","warn","getConfig","scaleFactor","window","devicePixelRatio","updateImages","imagesPath","maxDiffThreshold","diffConfig","screenshotConfig","matchAgainstPath","undefined","Commands","add","prevSubject","subject","$el","title","currentRetryNumber","cy","state","currentRetry","then","task","titleFromOptions","currentTest","titlePath","join","specPath","spec","relative","screenshotPath","titleFromTask","imgPath","wrap","screenshot","onAfterScreenshot","el","props","path","imgNew","imgOld","replace","actual","res","name","displayName","set","Error","message","imgDiffBase64","imgNewBase64","imgOldBase64","Base64","encode","encodeURIComponent","JSON","stringify","diffValue","imgDiff","imgNewPath","imgDiffPath","diff","imgBase64","Buffer","from","img","queueClear","queue","clear","queueRun","run","generateOverlayTemplate","wasImageNotUpdatedYet","before","top","$","document","body","remove","after","on","e","preventDefault","parse","decodeURIComponent","decode","currentTarget","getAttribute","substring","length","appendTo","wrapper"],"mappings":"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"}